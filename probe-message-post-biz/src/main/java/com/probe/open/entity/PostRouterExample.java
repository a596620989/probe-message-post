package com.probe.open.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PostRouterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public PostRouterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProbesnIsNull() {
            addCriterion("probeSn is null");
            return (Criteria) this;
        }

        public Criteria andProbesnIsNotNull() {
            addCriterion("probeSn is not null");
            return (Criteria) this;
        }

        public Criteria andProbesnEqualTo(String value) {
            addCriterion("probeSn =", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnNotEqualTo(String value) {
            addCriterion("probeSn <>", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnGreaterThan(String value) {
            addCriterion("probeSn >", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnGreaterThanOrEqualTo(String value) {
            addCriterion("probeSn >=", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnLessThan(String value) {
            addCriterion("probeSn <", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnLessThanOrEqualTo(String value) {
            addCriterion("probeSn <=", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnLike(String value) {
            addCriterion("probeSn like", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnNotLike(String value) {
            addCriterion("probeSn not like", value, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnIn(List<String> values) {
            addCriterion("probeSn in", values, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnNotIn(List<String> values) {
            addCriterion("probeSn not in", values, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnBetween(String value1, String value2) {
            addCriterion("probeSn between", value1, value2, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbesnNotBetween(String value1, String value2) {
            addCriterion("probeSn not between", value1, value2, "probesn");
            return (Criteria) this;
        }

        public Criteria andProbemacIsNull() {
            addCriterion("probeMac is null");
            return (Criteria) this;
        }

        public Criteria andProbemacIsNotNull() {
            addCriterion("probeMac is not null");
            return (Criteria) this;
        }

        public Criteria andProbemacEqualTo(String value) {
            addCriterion("probeMac =", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacNotEqualTo(String value) {
            addCriterion("probeMac <>", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacGreaterThan(String value) {
            addCriterion("probeMac >", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacGreaterThanOrEqualTo(String value) {
            addCriterion("probeMac >=", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacLessThan(String value) {
            addCriterion("probeMac <", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacLessThanOrEqualTo(String value) {
            addCriterion("probeMac <=", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacLike(String value) {
            addCriterion("probeMac like", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacNotLike(String value) {
            addCriterion("probeMac not like", value, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacIn(List<String> values) {
            addCriterion("probeMac in", values, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacNotIn(List<String> values) {
            addCriterion("probeMac not in", values, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacBetween(String value1, String value2) {
            addCriterion("probeMac between", value1, value2, "probemac");
            return (Criteria) this;
        }

        public Criteria andProbemacNotBetween(String value1, String value2) {
            addCriterion("probeMac not between", value1, value2, "probemac");
            return (Criteria) this;
        }

        public Criteria andThirdidIsNull() {
            addCriterion("thirdId is null");
            return (Criteria) this;
        }

        public Criteria andThirdidIsNotNull() {
            addCriterion("thirdId is not null");
            return (Criteria) this;
        }

        public Criteria andThirdidEqualTo(Integer value) {
            addCriterion("thirdId =", value, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidNotEqualTo(Integer value) {
            addCriterion("thirdId <>", value, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidGreaterThan(Integer value) {
            addCriterion("thirdId >", value, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidGreaterThanOrEqualTo(Integer value) {
            addCriterion("thirdId >=", value, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidLessThan(Integer value) {
            addCriterion("thirdId <", value, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidLessThanOrEqualTo(Integer value) {
            addCriterion("thirdId <=", value, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidIn(List<Integer> values) {
            addCriterion("thirdId in", values, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidNotIn(List<Integer> values) {
            addCriterion("thirdId not in", values, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidBetween(Integer value1, Integer value2) {
            addCriterion("thirdId between", value1, value2, "thirdid");
            return (Criteria) this;
        }

        public Criteria andThirdidNotBetween(Integer value1, Integer value2) {
            addCriterion("thirdId not between", value1, value2, "thirdid");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedIsNull() {
            addCriterion("gmtCreated is null");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedIsNotNull() {
            addCriterion("gmtCreated is not null");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedEqualTo(Date value) {
            addCriterion("gmtCreated =", value, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedNotEqualTo(Date value) {
            addCriterion("gmtCreated <>", value, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedGreaterThan(Date value) {
            addCriterion("gmtCreated >", value, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmtCreated >=", value, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedLessThan(Date value) {
            addCriterion("gmtCreated <", value, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedLessThanOrEqualTo(Date value) {
            addCriterion("gmtCreated <=", value, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedIn(List<Date> values) {
            addCriterion("gmtCreated in", values, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedNotIn(List<Date> values) {
            addCriterion("gmtCreated not in", values, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedBetween(Date value1, Date value2) {
            addCriterion("gmtCreated between", value1, value2, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtcreatedNotBetween(Date value1, Date value2) {
            addCriterion("gmtCreated not between", value1, value2, "gmtcreated");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedIsNull() {
            addCriterion("gmtModified is null");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedIsNotNull() {
            addCriterion("gmtModified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedEqualTo(Date value) {
            addCriterion("gmtModified =", value, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedNotEqualTo(Date value) {
            addCriterion("gmtModified <>", value, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedGreaterThan(Date value) {
            addCriterion("gmtModified >", value, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmtModified >=", value, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedLessThan(Date value) {
            addCriterion("gmtModified <", value, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmtModified <=", value, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedIn(List<Date> values) {
            addCriterion("gmtModified in", values, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedNotIn(List<Date> values) {
            addCriterion("gmtModified not in", values, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedBetween(Date value1, Date value2) {
            addCriterion("gmtModified between", value1, value2, "gmtmodified");
            return (Criteria) this;
        }

        public Criteria andGmtmodifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmtModified not between", value1, value2, "gmtmodified");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 04 21:15:06 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wi_probe_open_post_router
     *
     * @mbggenerated Wed Nov 04 21:15:06 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}